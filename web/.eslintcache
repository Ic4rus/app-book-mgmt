[{"C:\\Workspaces\\React\\demo-doc-mgmt\\src\\index.js":"1","C:\\Workspaces\\React\\demo-doc-mgmt\\src\\App.js":"2","C:\\Workspaces\\React\\demo-doc-mgmt\\src\\reportWebVitals.js":"3","C:\\Workspaces\\React\\demo-doc-mgmt\\src\\Action.js":"4","C:\\Workspaces\\React\\demo-doc-mgmt\\src\\Api.js":"5"},{"size":500,"mtime":499162500000,"results":"6","hashOfConfig":"7"},{"size":6724,"mtime":1610170325973,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":499162500000,"results":"9","hashOfConfig":"7"},{"size":183,"mtime":1610163851114,"results":"10","hashOfConfig":"7"},{"size":262,"mtime":1608977168023,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"kw51uc",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Workspaces\\React\\demo-doc-mgmt\\src\\index.js",[],["25","26"],"C:\\Workspaces\\React\\demo-doc-mgmt\\src\\App.js",["27"],"import { useEffect, useState } from 'react';\nimport {\n  Button,\n  Card,\n  Col,\n  Pagination,\n  Progress,\n  Spin,\n  Typography,\n  Upload,\n} from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport { PlusOutlined, CloseOutlined } from '@ant-design/icons';\n\nimport * as action from './Action';\n\nimport 'antd/dist/antd.css';\nimport './App.scss';\nimport { Document, Page, pdfjs } from 'react-pdf';\nimport Layout, { Content } from 'antd/lib/layout/layout';\nimport Sider from 'antd/lib/layout/Sider';\nimport Lottie from 'react-lottie';\nimport animationData from './18077-book-read.json';\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\nconst { Meta } = Card;\n\nexport const Book = (props) => {\n  const { isBook } = props;\n\n  return isBook ? (\n    <Col span={6}>\n      <Card\n        hoverable\n        style={{ width: 160 }}\n        cover={\n          <img\n            alt='example'\n            src='https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png'\n          />\n        }\n      >\n        <Meta title='Europe Street beat' description='www.instagram.com' />\n      </Card>\n    </Col>\n  ) : (\n    <Col span={6} style={{ minHeight: '270px' }}>\n      <Upload\n        name='file'\n        listType='picture-card'\n        className='uploader'\n        showUploadList={false}\n        action='http://localhost:8080/books/upload'\n      >\n        <PlusOutlined />\n      </Upload>\n    </Col>\n  );\n};\n\nconst App = () => {\n  const [keyword, setKeyword] = useState(undefined);\n  const [fileList, setFileList] = useState([]);\n  const [file, setFile] = useState({});\n\n  useEffect(() => {\n    loadBooks();\n  }, []);\n\n  const loadBooks = async (keyword) => {\n    const { data } = await action.fetchAllBooks(keyword);\n\n    if (data.code === 0) {\n      const fileList = data.data;\n\n      fileList.forEach((value, index) => (value.uid = index));\n\n      setKeyword(keyword);\n      setFileList(fileList);\n    }\n  };\n\n  const handleChange = ({ file, fileList }) => {\n    if (file.status === 'done') {\n      const { response } = file;\n\n      const book = response.data;\n\n      fileList\n        .filter((value) => value.uid === file.uid)\n        .forEach((value) => {\n          value.title = book.title;\n          value.author = book.author;\n          value.filePath = book.filePath;\n          value.thumbnailPath = book.thumbnailPath;\n          value.numberOfPages = book.numberOfPages;\n          value.pageNumber = 1;\n        });\n    }\n\n    setFileList(fileList);\n  };\n\n  const itemRender = (_originNode, file, _fileList) => {\n    const { status, percent } = file;\n\n    if (status === 'uploading') {\n      return (\n        <div className='uploading'>\n          <Progress percent={percent} />\n          <span className='file-name'>{file.name}</span>\n        </div>\n      );\n    } else {\n      return (\n        <Card\n          key={file.filePath}\n          hoverable\n          cover={\n            keyword ? (\n              <span\n                className='highlight'\n                dangerouslySetInnerHTML={{\n                  __html: file.highlight ? file.highlight.text : '',\n                }}\n              ></span>\n            ) : (\n              <img\n                alt=''\n                src={`http://localhost:8080/books/download?filePath=${file.thumbnailPath}&isBook=false`}\n                style={{ width: 160, height: 200, backgroundSize: 'cover' }}\n              />\n            )\n          }\n          onClick={() => handleShowContent(file)}\n        >\n          <Meta\n            title={file.title}\n            description={\n              keyword\n                ? 'Page ' + (file.highlight ? file.highlight.pageNumber : 'N/A')\n                : file.author\n                ? file.author\n                : 'N/A'\n            }\n          />\n        </Card>\n      );\n    }\n  };\n\n  const handleShowContent = (selectedFile) => {\n    console.log('Show content', selectedFile);\n\n    if (selectedFile.filePath !== file.filePath) {\n      selectedFile.loading = true;\n    } else {\n      selectedFile.loading = false;\n    }\n\n    selectedFile.pageNumber = selectedFile.highlight\n      ? selectedFile.highlight.pageNumber\n      : 1;\n\n    setFile(selectedFile);\n  };\n\n  const handleLoadSuccess = () => {\n    console.log('Load success');\n\n    file.loading = false;\n\n    setFile({ ...file });\n  };\n\n  const handleChangePage = (page) => {\n    file.pageNumber = page;\n\n    setFile({ ...file });\n  };\n\n  const handleSearch = (keyword) => {\n    loadBooks(keyword.trim());\n  };\n\n  const lottieOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice',\n    },\n  };\n\n  return (\n    <Layout>\n      <Layout>\n        <Content>\n          <div className='app-container'>\n            <Lottie options={lottieOptions} height={100} width={100} />\n            <Search\n              placeholder='Keyword'\n              enterButton\n              size='large'\n              className='search-bar'\n              onSearch={handleSearch}\n            />\n            <div className='book-list'>\n              <Upload\n                action='http://localhost:8080/books/upload'\n                listType='picture-card'\n                fileList={fileList}\n                itemRender={itemRender}\n                onChange={handleChange}\n              >\n                {!keyword && (\n                  <div>\n                    <PlusOutlined />\n                    <div style={{ marginTop: 8 }}>Upload</div>\n                  </div>\n                )}\n              </Upload>\n            </div>\n          </div>\n        </Content>\n      </Layout>\n      <Sider width={file.title ? 616 : 0}>\n        {file.title && (\n          <div className='sider'>\n            <div className='menu-bar'>\n              <Button\n                type='text'\n                style={{ color: '#fff' }}\n                size='large'\n                icon={<CloseOutlined />}\n                onClick={() => setFile({})}\n              />\n            </div>\n            <div className='content'>\n              <Spin spinning={file.loading}>\n                <Document\n                  file={`http://localhost:8080/books/download?filePath=${file.filePath}`}\n                  onLoadSuccess={handleLoadSuccess}\n                >\n                  <Page pageNumber={file.pageNumber} />\n                </Document>\n              </Spin>\n            </div>\n            <Pagination\n              current={file.pageNumber}\n              pageSize={1}\n              total={file.numberOfPages}\n              onChange={handleChangePage}\n              simple\n            />\n          </div>\n        )}\n      </Sider>\n    </Layout>\n  );\n};\n\nexport default App;\n","C:\\Workspaces\\React\\demo-doc-mgmt\\src\\reportWebVitals.js",[],"C:\\Workspaces\\React\\demo-doc-mgmt\\src\\Action.js",[],"C:\\Workspaces\\React\\demo-doc-mgmt\\src\\Api.js",[],["28","29"],{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","severity":1,"message":"35","line":9,"column":3,"nodeType":"36","messageId":"37","endLine":9,"endColumn":13},{"ruleId":"30","replacedBy":"38"},{"ruleId":"32","replacedBy":"39"},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar",["40"],["41"],"no-global-assign","no-unsafe-negation"]